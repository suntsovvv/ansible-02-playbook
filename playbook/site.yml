---
- name: Install Clickhouse
  hosts: clickhouse
  handlers:
    - name: Start clickhouse service
      become: true
      ansible.builtin.service:
        name: clickhouse-server
        state: restarted
  tasks:
    - block:
        - name: Get clickhouse distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/{{ item }}-{{ clickhouse_version }}.noarch.rpm"
            dest: "./{{ item }}-{{ clickhouse_version }}.rpm"
          with_items: "{{ clickhouse_packages }}"
      rescue:
        - name: Get clickhouse distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/clickhouse-common-static-{{ clickhouse_version }}.{{ clickhouse_arch }}.rpm"
            dest: "./clickhouse-common-static-{{ clickhouse_version }}.rpm"
    - name: Install clickhouse packages
      become: true
      ansible.builtin.yum:
        name:
          - clickhouse-common-static-{{ clickhouse_version }}.rpm
          - clickhouse-client-{{ clickhouse_version }}.rpm
          - clickhouse-server-{{ clickhouse_version }}.rpm
      notify: Start clickhouse service
    - name: Flush handlers
      meta: flush_handlers
    - name: Create database
      ansible.builtin.command: "clickhouse-client -q 'create database logs;'"
      register: create_db
      failed_when: create_db.rc != 0 and create_db.rc !=82
      changed_when: create_db.rc == 0

- name: Install Vector
  hosts: vector
  handlers:
    - name: Start vector service
      become: true
      ansible.builtin.service:
        name: vector-server
        state: restarted
  tasks:   
    - name: Get vector distrib
      ansible.builtin.get_url:
       url: "https://packages.timber.io/vector/{{ vector_version }}/vector-{{ vector_version }}-{{ vector_arch }}-unknown-linux-musl.tar.gz"
       dest: "./vector-{{ vector_version }}.tar.gz"
       validate_certs: no
            #notify: Start vector service 
     
     
     
     # - name: Get vector distrib
#       ansible.builtin.get_url:
#         url: "https://packages.timber.io/vector/{{ vector_version }}/vector_{{ vector_version }}-1_amd64.deb"
#         dest: "./vector-{{ vector_version }}.deb"
#         mode: "0777"
#       notify: Start vector service
# # Workaround for latest version being named against a version number
# - name: Get latest version
#   uri:
#     url: https://s3.amazonaws.com/packages.timber.io/?prefix=vector/latest&max-keys=1
#     return_content: true
#   register: bucket_content
#   when: vector_version == "latest"

# - name: Set latest version
#   set_fact:
#     vector_version: "{{ bucket_content.content | regex_replace('.*\\n.*<Key>[^-]+-(?P<version>[\\d\\.]+)-.*','\\g<version>') }}"
#   when: vector_version == "latest"

#

# - name: Install Vector (RedHat)
#   yum:
#     name: "https://packages.timber.io/vector/{{ version }}/vector-{{ package_version }}.{{ arch }}.rpm"
#     state: present
#     disable_gpg_check: yes # package is not signed
#   notify:
#     - restart vector
#   vars:
#     version: "{{ (vector_version == 'nightly')| bool | ternary('nightly/latest', vector_version) }}"
#     package_version: "{{ vector_version is match('latest') | ternary(vector_version, vector_version ~ '-1') }}"
#     arch: "{{ vector_redhat_arch[ansible_machine] }}"
#   when: ansible_os_family == 'RedHat'

# - name: Copy config
#   template:
#     src: "{{ vector_template }}"
#     dest: "{{ vector_config_file }}"
#     mode: 0644
#   notify: restart vector

# - name: Use the right config_file
#   lineinfile:
#     path: /etc/default/vector
#     line: "VECTOR_CONFIG={{ vector_config_file }}"
#     state: present

# - name: Add vector user to docker group
#   user:
#     name: vector
#     groups: docker
#     append: yes
#   when: add_vector_docker_group | default(no)
#   notify: restart vector

# - name: Add vector user to systemd-journal group
#   user:
#     name: vector
#     groups: systemd-journal
#     append: yes
#   when: add_vector_journal_group | default(no)
#   notify: restart vector

# - name: Start Vector
#   service:
#     state: started
#     enabled: yes
#     name: vector
